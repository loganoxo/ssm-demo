<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启@Controller、@service、@Autowire等注解-->
    <context:annotation-config/>

    <!-- 配置注解驱动 开启@ResquestMapping-->
    <mvc:annotation-driven/>

    <!-- 配置包扫描器 -->
    <context:component-scan base-package="com.my.controller" use-default-filters="false">
        <context:include-filter type="regex"
                                expression=".*\.[^.]*Controller"/>
    </context:component-scan>

    <!--让htm可以返回json数据，spring mvc4如果类型不匹配会拦截掉返回http status 406-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
    </bean>
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
        <mvc:message-converters register-defaults="true">
            <!-- 配置Fastjson支持 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--如果发送的请求不想通过controller，只想直接地跳转到目标页面。相当于在controller方法中直接返回，然后使用ViewResolver进行解析-->
    <mvc:view-controller path="/" view-name="redirect:index"/>

    <!-- 视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--        <property name="viewNames" value="order*"/>-->
        <property name="prefix" value="/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 配置静态资源访问 -->
    <mvc:resources location="/assert/css/" mapping="/assert/css/**"/>
    <mvc:resources location="/assert/js/" mapping="/assert/js/**"/>
    <mvc:resources location="/assert/images/" mapping="/assert/images/**"/>
    <mvc:resources location="/assert/vendor/" mapping="/assert/vendor/**"/>

    <!-- 控制器异常处理 -->
    <!--    <bean id="exceptionHandlerExceptionResolver"-->
    <!--          class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>-->
    <bean class="com.my.handler.DefaultExceptionHandler"/>

    <!--针对于所有mapping配置全局的拦截器 根据path做过滤-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <!--            <mvc:exclude-mapping path="/admin/login"/>&lt;!&ndash;排除拦截页面&ndash;&gt;-->
            <bean class="com.my.interceptor.DemoInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.my.interceptor.DemoInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>
</beans>